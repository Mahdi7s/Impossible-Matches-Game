<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_phy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var fxy = scr_rotate_point(x, y, x, y - sprite_yoffset - sprite_get_yoffset(spr_bomb_fitile), image_angle);
fitile = instance_create(fxy[0], fxy[1], obj_bomb_fitile);
fitile.image_angle = image_angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(fitile != noone) {
    var fxy = scr_rotate_point(x, y, x, y - sprite_yoffset - sprite_get_yoffset(spr_bomb_fitile), image_angle);
    fitile.x = fxy[0];
    fitile.y = fxy[1];
    fitile.image_angle = image_angle;
    //show_debug_message("fxy: " + string(
}

if(fitile.isFinished) {
    instance_create(x, y, obj_fire_bomb);
    var cage = instance_find(obj_cage, 0);
    var dist = point_distance(x, y, cage.x, cage.y);
    if(dist &lt;= 100) {
        var dir = point_direction(x, y, cage.x, cage.y);
        var impX = lengthdir_x(dist, dir);
        var impY = lengthdir_y(dist, dir);
        
        with(cage){
            physics_apply_impulse(x, y, impX, impY);
        }
    }
    
    scr_event_occurred("exp_bomb", x, y);
    
    
    with(fitile) instance_destroy();
    instance_destroy();
    
    fitile = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.800000011920929</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,38</point>
    <point>32,34</point>
  </PhysicsShapePoints>
</object>
