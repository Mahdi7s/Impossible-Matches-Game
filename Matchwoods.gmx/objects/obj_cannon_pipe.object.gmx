<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cannon_pipe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_friend</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isInverse = object_index == obj_cannon_pipe_inv;
var ratio = 1;
if(isInverse){
    ratio = -1;
    show_debug_message("is inverse");
}

var xoff = sprite_xoffset;
var yoff = sprite_yoffset;

// ----------------------- the pipe ------------------------

arrX[0] = (0-xoff)*ratio;
arrX[1] = (184-xoff)*ratio;
arrX[2] = (184-xoff)*ratio;
arrX[3] = (0-xoff)*ratio;

arrY[0] = 0-yoff;
arrY[1] = 16-yoff;
arrY[2] = 64-yoff;
arrY[3] = 72-yoff;

var fix = physics_fixture_create();
physics_fixture_set_restitution(fix, 0.1);
physics_fixture_set_density(fix, 1.5);
physics_fixture_set_friction(fix, 0.4);

physics_fixture_set_polygon_shape(fix);

var arrLen = array_length_1d(arrX);
for(var i = 0; i &lt; arrLen; i++) {
    if(!isInverse){
        physics_fixture_add_point(fix, arrX[i], arrY[i]);
    }else{
        var j = arrLen-(i+1);
        physics_fixture_add_point(fix, arrX[j], arrY[j]);
    }
}
arrX = 0;
arrY = 0;

physics_fixture_bind(fix, self);
physics_fixture_delete(fix);

// ----------------------- head of pipe ------------------------

arrX[0] = (188-xoff)*ratio;
arrX[1] = (197-xoff)*ratio;
arrX[2] = (197-xoff)*ratio;
arrX[3] = (188-xoff)*ratio;

arrY[0] = 8-yoff;
arrY[1] = 8-yoff;
arrY[2] = 67-yoff;
arrY[3] = 67-yoff;

fix = physics_fixture_create();
physics_fixture_set_restitution(fix, 0.1);
physics_fixture_set_density(fix, 0.3);
physics_fixture_set_friction(fix, 0.4);

physics_fixture_set_polygon_shape(fix);

arrLen = array_length_1d(arrX);
for(var i = 0; i &lt; arrLen; i++) {
    if(!isInverse){
        physics_fixture_add_point(fix, arrX[i], arrY[i]);
    }else{
        var j = arrLen-(i+1);
        physics_fixture_add_point(fix, arrX[j], arrY[j]);
    }
}
arrX = 0;
arrY = 0;

physics_fixture_bind(fix, self);
physics_fixture_delete(fix);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>196,0</point>
    <point>196,72</point>
    <point>0,72</point>
  </PhysicsShapePoints>
</object>
