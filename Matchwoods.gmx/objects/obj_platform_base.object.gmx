<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform_box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_solid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isBurner = false;
isDynamic = false;
isBox = true;
moveHorizontaly = true;

moveDistance = 100;
moveStep = +1;

moveStepX = 0;
moveStepY = 0;

startingX = x;
startingY = y;

minX = noone;
maxX = noone;

minY = noone;
maxY = noone;

canMove = false;

alarm[11] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isDynamic) {
    var ang = image_angle;//+90;
    if (moveHorizontaly) {
        //ang -= 90;
    } else {
        ang += 90;
    }
    
    moveStepX = lengthdir_x(moveStep, ang);
    moveStepY = lengthdir_y(moveStep, ang);
    
    var minxy = scr_rotate_point(startingX, startingY, startingX - moveDistance/2, startingY - moveDistance/2, image_angle);
    //minX = minxy[0];
    //minY = minxy[1];
    
    var maxxy = scr_rotate_point(startingX, startingY, startingX + moveDistance/2, startingY + moveDistance/2, image_angle);
    //maxX = maxxy[0];
    //maxY = maxxy[1];
    
    minX = min(minxy[0], maxxy[0]);
    maxX = max(minxy[0], maxxy[0]);
    
    minY = min(minxy[1], maxxy[1]);
    maxY = max(minxy[1], maxxy[1]);
    
    moveStep = 1;
    canMove = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(canMove &amp;&amp; isDynamic) {
    if((!((phy_position_x &gt;= minX &amp;&amp; phy_position_y &gt;= minY) &amp;&amp; (phy_position_x &lt;= maxX &amp;&amp; phy_position_y &lt;= maxY)))){
        moveStep *= -1;
    }
    
    phy_position_x += moveStepX*moveStep;
    phy_position_y += moveStepY*moveStep;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>78,0</point>
    <point>78,78</point>
    <point>0,78</point>
  </PhysicsShapePoints>
</object>
